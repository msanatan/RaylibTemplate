name: Build Raylib Game

on: [push]

env:
  RAYLIB_VERSION: 4.2.0
  GAME_NAME: MoveSquare

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-12, windows-2022]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # We download the prepackaged version of Raylib that works for the 64bit MinGW compiler
      - name: Install Raylib on Windows
        if: matrix.os == 'windows-2022'
        run: |
          curl -L https://github.com/raysan5/raylib/releases/download/${{ env.RAYLIB_VERSION }}/raylib-${{ env.RAYLIB_VERSION }}_win64_mingw-w64.zip --output raylib.zip
          7z x raylib.zip -oraylibwrapper
          mv raylibwrapper\raylib-${{ env.RAYLIB_VERSION }}_win64_mingw-w64 raylib
      # We build with our specific CI build command, which statically links Raylib
      - name: Build on Windows
        if: matrix.os == 'windows-2022'
        run: make build-win-ci
      # We then zip the game with 7z as it's already installed in the shared runner
      - name: Zip game build on Mac
        if: matrix.os == 'windows-2022'
        run: cd build && 7z a -tzip ${{ env.GAME_NAME }}.zip *

      # Mac installation of Raylib is similar, but we need to copy the static library and headers into the repo
      - name: Install Raylib on Mac
        if: matrix.os == 'macos-12'
        run: |
          curl -L https://github.com/raysan5/raylib/releases/download/${{ env.RAYLIB_VERSION }}/raylib-${{ env.RAYLIB_VERSION }}_macos.tar.gz --output raylib.tar.gz
          tar -xzvf raylib.tar.gz
          cp raylib-${{ env.RAYLIB_VERSION }}_macos/lib/* .
          cp raylib-${{ env.RAYLIB_VERSION }}_macos/include/* ./src
      # We build with our specific CI build command, which statically links Raylib
      - name: Build on Mac
        if: matrix.os == 'macos-12'
        run: make build-mac-ci
      # We then zip the game, this is needed in Mac so the final .app file is executable
      - name: Zip game build on Mac
        if: matrix.os == 'macos-12'
        run: cd build && zip -r ${{ env.GAME_NAME }}.zip *

      # Upload the artifacts for each OS
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.GAME_NAME }}-${{ matrix.os }}
          path: build/${{ env.GAME_NAME }}.zip
